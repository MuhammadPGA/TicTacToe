warning: in the working copy of '.idea/workspace.xml', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.idea/workspace.xml b/.idea/workspace.xml[m
[1mindex a9dd7e4..be28680 100644[m
[1m--- a/.idea/workspace.xml[m
[1m+++ b/.idea/workspace.xml[m
[36m@@ -1,15 +1,12 @@[m
 <?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
[32m+[m[32m  <component name="AutoImportSettings">[m
[32m+[m[32m    <option name="autoReloadType" value="SELECTIVE" />[m
[32m+[m[32m  </component>[m
   <component name="ChangeListManager">[m
     <list default="true" id="dbd7687e-5078-4b37-91b9-e04a7b74c780" name="Changes" comment="">[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/TicTacTow.iml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />[m
[31m-      <change afterPath="$PROJECT_DIR$/app.py" afterDir="false" />[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />[m
[32m+[m[32m      <change beforePath="$PROJECT_DIR$/app.py" beforeDir="false" afterPath="$PROJECT_DIR$/app.py" afterDir="false" />[m
     </list>[m
     <option name="SHOW_DIALOG" value="false" />[m
     <option name="HIGHLIGHT_CONFLICTS" value="true" />[m
[36m@@ -26,23 +23,35 @@[m
   <component name="Git.Settings">[m
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />[m
   </component>[m
[31m-  <component name="ProjectColorInfo"><![CDATA[{[m
[31m-  "associatedIndex": 3[m
[32m+[m[32m  <component name="GitHubPullRequestSearchHistory"><![CDATA[{[m
[32m+[m[32m  "lastFilter": {[m
[32m+[m[32m    "state": "OPEN",[m
[32m+[m[32m    "assignee": "Mohammadpga"[m
[32m+[m[32m  }[m
 }]]></component>[m
[32m+[m[32m  <component name="GithubPullRequestsUISettings"><![CDATA[{[m
[32m+[m[32m  "selectedUrlAndAccountId": {[m
[32m+[m[32m    "url": "https://github.com/MuhammadPGA/TicTacToe.git",[m
[32m+[m[32m    "accountId": "aa4d608a-4727-45d6-b2cb-69947fd00ec0"[m
[32m+[m[32m  }[m
[32m+[m[32m}]]></component>[m
[32m+[m[32m  <component name="ProjectColorInfo">{[m
[32m+[m[32m  &quot;associatedIndex&quot;: 3[m
[32m+[m[32m}</component>[m
   <component name="ProjectId" id="2nwhWBl6gjH58NX6XhGbdTIox1i" />[m
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />[m
   <component name="ProjectViewState">[m
     <option name="hideEmptyMiddlePackages" value="true" />[m
     <option name="showLibraryContents" value="true" />[m
   </component>[m
[31m-  <component name="PropertiesComponent"><![CDATA[{[m
[31m-  "keyToString": {[m
[31m-    "Python.app.executor": "Run",[m
[31m-    "RunOnceActivity.ShowReadmeOnStart": "true",[m
[31m-    "git-widget-placeholder": "master",[m
[31m-    "ignore.virus.scanning.warn.message": "true"[m
[32m+[m[32m  <component name="PropertiesComponent">{[m
[32m+[m[32m  &quot;keyToString&quot;: {[m
[32m+[m[32m    &quot;Python.app.executor&quot;: &quot;Run&quot;,[m
[32m+[m[32m    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,[m
[32m+[m[32m    &quot;git-widget-placeholder&quot;: &quot;master&quot;,[m
[32m+[m[32m    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;[m
   }[m
[31m-}]]></component>[m
[32m+[m[32m}</component>[m
   <component name="SharedIndexes">[m
     <attachedChunks>[m
       <set>[m
[1mdiff --git a/app.py b/app.py[m
[1mindex d9ac4d7..2e3558d 100644[m
[1m--- a/app.py[m
[1m+++ b/app.py[m
[36m@@ -5,7 +5,7 @@[m [mimport sys[m
 pygame.init()[m
 [m
 # Constants[m
[31m-WIDTH, HEIGHT = 300, 300[m
[32m+[m[32mWIDTH, HEIGHT = 600, 600[m
 LINE_WIDTH = 15[m
 BOARD_ROWS = 3[m
 BOARD_COLS = 3[m
[36m@@ -14,14 +14,15 @@[m [mCIRCLE_RADIUS = SQUARE_SIZE // 3[m
 CIRCLE_WIDTH = 15[m
 CROSS_WIDTH = 25[m
 SPACE = SQUARE_SIZE // 4[m
[31m-WHITE = (255, 255, 255)[m
[31m-BLACK = (0, 0, 0)[m
[31m-RED = (255, 0, 0)[m
[32m+[m[32mBACKGROUND_COLOR = (28, 170, 156)[m
[32m+[m[32mLINE_COLOR = (23, 145, 135)[m
[32m+[m[32mCIRCLE_COLOR = (239, 231, 200)[m
[32m+[m[32mCROSS_COLOR = (84, 84, 84)[m
 [m
 # Screen[m
 screen = pygame.display.set_mode((WIDTH, HEIGHT))[m
 pygame.display.set_caption("Tic Tac Toe")[m
[31m-screen.fill(WHITE)[m
[32m+[m[32mscreen.fill(BACKGROUND_COLOR)[m
 [m
 # Board[m
 board = [[None] * BOARD_COLS for _ in range(BOARD_ROWS)][m
[36m@@ -30,19 +31,19 @@[m [mboard = [[None] * BOARD_COLS for _ in range(BOARD_ROWS)][m
 def draw_lines():[m
     # Horizontal lines[m
     for row in range(1, BOARD_ROWS):[m
[31m-        pygame.draw.line(screen, BLACK, (0, row * SQUARE_SIZE), (WIDTH, row * SQUARE_SIZE), LINE_WIDTH)[m
[32m+[m[32m        pygame.draw.line(screen, LINE_COLOR, (0, row * SQUARE_SIZE), (WIDTH, row * SQUARE_SIZE), LINE_WIDTH)[m
     # Vertical lines[m
     for col in range(1, BOARD_COLS):[m
[31m-        pygame.draw.line(screen, BLACK, (col * SQUARE_SIZE, 0), (col * SQUARE_SIZE, HEIGHT), LINE_WIDTH)[m
[32m+[m[32m        pygame.draw.line(screen, LINE_COLOR, (col * SQUARE_SIZE, 0), (col * SQUARE_SIZE, HEIGHT), LINE_WIDTH)[m
 [m
 def draw_figures():[m
     for row in range(BOARD_ROWS):[m
         for col in range(BOARD_COLS):[m
             if board[row][col] == 'O':[m
[31m-                pygame.draw.circle(screen, BLACK, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), CIRCLE_RADIUS, CIRCLE_WIDTH)[m
[32m+[m[32m                pygame.draw.circle(screen, CIRCLE_COLOR, (col * SQUARE_SIZE + SQUARE_SIZE // 2, row * SQUARE_SIZE + SQUARE_SIZE // 2), CIRCLE_RADIUS, CIRCLE_WIDTH)[m
             elif board[row][col] == 'X':[m
[31m-                pygame.draw.line(screen, BLACK, (col * SQUARE_SIZE + SPACE, row * SQUARE_SIZE + SQUARE_SIZE - SPACE), (col * SQUARE_SIZE + SQUARE_SIZE - SPACE, row * SQUARE_SIZE + SPACE), CROSS_WIDTH)[m
[31m-                pygame.draw.line(screen, BLACK, (col * SQUARE_SIZE + SPACE, row * SQUARE_SIZE + SPACE), (col * SQUARE_SIZE + SQUARE_SIZE - SPACE, row * SQUARE_SIZE + SQUARE_SIZE - SPACE), CROSS_WIDTH)[m
[32m+[m[32m                pygame.draw.line(screen, CROSS_COLOR, (col * SQUARE_SIZE + SPACE, row * SQUARE_SIZE + SQUARE_SIZE - SPACE), (col * SQUARE_SIZE + SQUARE_SIZE - SPACE, row * SQUARE_SIZE + SPACE), CROSS_WIDTH)[m
[32m+[m[32m                pygame.draw.line(screen, CROSS_COLOR, (col * SQUARE_SIZE + SPACE, row * SQUARE_SIZE + SPACE), (col * SQUARE_SIZE + SQUARE_SIZE - SPACE, row * SQUARE_SIZE + SQUARE_SIZE - SPACE), CROSS_WIDTH)[m
 [m
 def check_winner(player):[m
     # Vertical win[m
[36m@@ -67,20 +68,20 @@[m [mdef check_winner(player):[m
 [m
 def draw_vertical_winning_line(col, player):[m
     posX = col * SQUARE_SIZE + SQUARE_SIZE // 2[m
[31m-    pygame.draw.line(screen, RED, (posX, 15), (posX, HEIGHT - 15), LINE_WIDTH)[m
[32m+[m[32m    pygame.draw.line(screen, (0, 255, 0), (posX, 15), (posX, HEIGHT - 15), LINE_WIDTH)[m
 [m
 def draw_horizontal_winning_line(row, player):[m
     posY = row * SQUARE_SIZE + SQUARE_SIZE // 2[m
[31m-    pygame.draw.line(screen, RED, (15, posY), (WIDTH - 15, posY), LINE_WIDTH)[m
[32m+[m[32m    pygame.draw.line(screen, (0, 255, 0), (15, posY), (WIDTH - 15, posY), LINE_WIDTH)[m
 [m
 def draw_ascending_diagonal(player):[m
[31m-    pygame.draw.line(screen, RED, (15, HEIGHT - 15), (WIDTH - 15, 15), LINE_WIDTH)[m
[32m+[m[32m    pygame.draw.line(screen, (0, 255, 0), (15, HEIGHT - 15), (WIDTH - 15, 15), LINE_WIDTH)[m
 [m
 def draw_descending_diagonal(player):[m
[31m-    pygame.draw.line(screen, RED, (15, 15), (WIDTH - 15, HEIGHT - 15), LINE_WIDTH)[m
[32m+[m[32m    pygame.draw.line(screen, (0, 255, 0), (15, 15), (WIDTH - 15, HEIGHT - 15), LINE_WIDTH)[m
 [m
 def restart():[m
[31m-    screen.fill(WHITE)[m
[32m+[m[32m    screen.fill(BACKGROUND_COLOR)[m
     draw_lines()[m
     for row in range(BOARD_ROWS):[m
         for col in range(BOARD_COLS):[m
